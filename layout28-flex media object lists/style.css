* {
  box-sizing: border-box;
}
body {
  background-color: #f5f5f5;
  margin: 0 auto; 
  max-width: 60em;
  line-height: 1.3;
}
ul, li {
  margin: 0;
  padding: 0;
  list-style: none;
}
img {
  width: 100%;
}
h2 {
  margin-top: 0;
  margin-bottom: 0.4em;
}

/*Flex items*/
.list {
  display: flex;
  flex-wrap: wrap;
}

/* Solution : https://stackoverflow.com/questions/34250282/flexbox-safari-bug-flex-wrap

Safari misplaces the elements.
This happens because Safari treats :before and :after pseudo-elements as if they were real elements. E.g. think about a container with 7 items. If container has :before and :after Safari will position the items like this:

[:before ] [1st-item] [2nd-item]

[3rd-item] [4th-item] [5th-item]

[6th-item] [7th-item] [:after  ]
Solution

As an alternative to the accepted answer I remove :before & :after from flex containers instead of altering the HTML. In your case:

.flexthis.container:before,
.flexthis.container:after,
.flexthis.row:before,
.flexthis.row:after {
   content: normal; // IE doesn't support `initial`
} */


.list::before, .list::after {
  content: normal;
    
  /* or you can set as flex 
  content: '';
  display: flex; 
  */
}
.list-item {
	display: flex;
  align-items: flex-start;
  
  padding: 0.5em;
	width: 100%;
}
.list-item > img {
  width: 75px;
  margin: 0 1rem 0 0;
}

@media all and (min-width: 40em) {
  .list-item {
    width: 50%;
  }
}
/* @media all and (min-width: 60em) {
  .list-item {
    width: 33.33%;
  }
} */
.list-content {
	background-color: #fff;
  display: flex;
  flex-direction: column;
  padding: 1em;
	width: 100%;
}
.list-content p {
	flex: 1 0 auto;
}
